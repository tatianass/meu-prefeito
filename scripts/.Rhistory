limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
View(limite_despesas_candidatos_pb)
View(limite_despesas_candidatos_pb)
View(informacoes_pessoais_candidatos)
View(informacoes_pessoais_candidatos)
View(informacoes_pessoais_candidatos)
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
View(todos_candidatos)
View(todos_candidatos)
View(todos_candidatos)
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
View(gastos_candidatos_pb)
View(todos_candidatos)
View(informacoes_pessoais_candidatos)
View(todos_candidatos)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Numero_candidato_urna" = "Nº"))
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Numero_candidato_urna" = "Nº"))
View(todos_candidatos)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Numero_candidato_urna" = "Nº"))
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Numero_candidato_urna" = "Numero_candidato"))
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Municipio", "Numero_candidato_urna" = "Numero_candidato"))
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
View(candidatos)
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
View(limite_despesas_candidatos_pb)
View(candidatos)
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
View(candidatos)
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
informacoes_candidatos <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(soma_gastos = sum(Valor.despesa))
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# Informacoes pessoais dos candidatos
informacoes_pessoais_candidatos <- read.csv("../data/consulta_cand_2016_PB.txt", sep=";", header = F, stringsAsFactors = F, encoding = "latin1", col.names = c("Data_geracao","Dora_geracao","Ano_eleicao","Num_turno","Descricao_eleicao","Sigla_uf","Sigla_ue","Descricao_ue","Codigo_cargo","Descricao_cargo","Nome_candidato","Sequencial_candidato",
"Numero_candidato_urna","CPF_candidato","Nome_urna_candidato","Cod_situacao_candidatura","Descricao_situacao_candidatura","Numero_partido","Sigla_partido","Nome_partido","Codigo_legenda","Sigla_legenda","Composicao_legenda","Nome_legenda",
"Codigo_ocupacao","Descricao_ocupacao","Data_nascimento","Num_titulo_eleitoral_candidato","Idade_data_eleicao","Codigo_sexo","Descricao_sexo","Cod_grau_instrucao","Descricao_grau_instrucao","Codigo_estado_civil","Descricao_estado_civil","Codigo_cor_raca",
"Descricao_cor_raca","Codigo_nacionalidade","Descricao_nacionalidade","Sigla_uf_nascimento","Codigo_municipio_nascimento","Nome_municipio_nascimento","Despesa_max_campanha","Cod_situacao_totalizacao_turno","Descricao_situacao_totalizacao_turno","Email"))
informacoes_pessoais_candidatos <- informacoes_pessoais_candidatos %>% filter(Descricao_cargo %in% c("PREFEITO","VEREADOR"), Descricao_situacao_candidatura %in% c("DEFERIDO","DEFERIDO COM RECURSO")) %>%
select(Nome_candidato,CPF_candidato,Descricao_ue,-Descricao_cargo,Numero_candidato_urna,-Descricao_situacao_candidatura,Descricao_ocupacao,Idade_data_eleicao,Descricao_sexo,Descricao_grau_instrucao,Descricao_estado_civil,Descricao_cor_raca,Descricao_nacionalidade,Sigla_uf_nascimento,Nome_municipio_nascimento)
informacoes_pessoais_candidatos$Descricao_ue <- iconv(informacoes_pessoais_candidatos$Descricao_ue, from="latin1", to="ASCII//TRANSLIT")
# Adiciona cargo, partido, coligação e votação dos candidatos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
gastos_candidatos_pb <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(soma_gastos = sum(Valor.despesa))
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(soma_gastos = sum(Valor.despesa))
View(gastos_candidatos_pb)
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(soma_gastos = sum(Valor.despesa))
gastos_candidatos_pb <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
View(gastos_candidatos_pb)
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
informacoes_candidatos$Soma_gastos <- with(informacoes_candidatos, ifelse(is.na(Soma_gastos),0,Soma_gastos))
gastos_candidatos_pb$Soma_gastos <- with(gastos_candidatos_pb, ifelse(is.na(Soma_gastos),0,Soma_gastos))
View(gastos_candidatos_pb)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# Informacoes pessoais dos candidatos
informacoes_pessoais_candidatos <- read.csv("../data/consulta_cand_2016_PB.txt", sep=";", header = F, stringsAsFactors = F, encoding = "latin1", col.names = c("Data_geracao","Dora_geracao","Ano_eleicao","Num_turno","Descricao_eleicao","Sigla_uf","Sigla_ue","Descricao_ue","Codigo_cargo","Descricao_cargo","Nome_candidato","Sequencial_candidato",
"Numero_candidato_urna","CPF_candidato","Nome_urna_candidato","Cod_situacao_candidatura","Descricao_situacao_candidatura","Numero_partido","Sigla_partido","Nome_partido","Codigo_legenda","Sigla_legenda","Composicao_legenda","Nome_legenda",
"Codigo_ocupacao","Descricao_ocupacao","Data_nascimento","Num_titulo_eleitoral_candidato","Idade_data_eleicao","Codigo_sexo","Descricao_sexo","Cod_grau_instrucao","Descricao_grau_instrucao","Codigo_estado_civil","Descricao_estado_civil","Codigo_cor_raca",
"Descricao_cor_raca","Codigo_nacionalidade","Descricao_nacionalidade","Sigla_uf_nascimento","Codigo_municipio_nascimento","Nome_municipio_nascimento","Despesa_max_campanha","Cod_situacao_totalizacao_turno","Descricao_situacao_totalizacao_turno","Email"))
informacoes_pessoais_candidatos <- informacoes_pessoais_candidatos %>% filter(Descricao_cargo %in% c("PREFEITO","VEREADOR"), Descricao_situacao_candidatura %in% c("DEFERIDO","DEFERIDO COM RECURSO")) %>%
select(Nome_candidato,CPF_candidato,Descricao_ue,-Descricao_cargo,Numero_candidato_urna,-Descricao_situacao_candidatura,Descricao_ocupacao,Idade_data_eleicao,Descricao_sexo,Descricao_grau_instrucao,Descricao_estado_civil,Descricao_cor_raca,Descricao_nacionalidade,Sigla_uf_nascimento,Nome_municipio_nascimento)
informacoes_pessoais_candidatos$Descricao_ue <- iconv(informacoes_pessoais_candidatos$Descricao_ue, from="latin1", to="ASCII//TRANSLIT")
# Adiciona cargo, partido, coligação e votação dos candidatos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
# Adiciona gastos para cada candidato
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
gastos_candidatos_pb$Soma_gastos <- with(gastos_candidatos_pb, ifelse(is.na(Soma_gastos),0,Soma_gastos))
View(gastos_candidatos_pb)
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# Informacoes pessoais dos candidatos
informacoes_pessoais_candidatos <- read.csv("../data/consulta_cand_2016_PB.txt", sep=";", header = F, stringsAsFactors = F, encoding = "latin1", col.names = c("Data_geracao","Dora_geracao","Ano_eleicao","Num_turno","Descricao_eleicao","Sigla_uf","Sigla_ue","Descricao_ue","Codigo_cargo","Descricao_cargo","Nome_candidato","Sequencial_candidato",
"Numero_candidato_urna","CPF_candidato","Nome_urna_candidato","Cod_situacao_candidatura","Descricao_situacao_candidatura","Numero_partido","Sigla_partido","Nome_partido","Codigo_legenda","Sigla_legenda","Composicao_legenda","Nome_legenda",
"Codigo_ocupacao","Descricao_ocupacao","Data_nascimento","Num_titulo_eleitoral_candidato","Idade_data_eleicao","Codigo_sexo","Descricao_sexo","Cod_grau_instrucao","Descricao_grau_instrucao","Codigo_estado_civil","Descricao_estado_civil","Codigo_cor_raca",
"Descricao_cor_raca","Codigo_nacionalidade","Descricao_nacionalidade","Sigla_uf_nascimento","Codigo_municipio_nascimento","Nome_municipio_nascimento","Despesa_max_campanha","Cod_situacao_totalizacao_turno","Descricao_situacao_totalizacao_turno","Email"))
informacoes_pessoais_candidatos <- informacoes_pessoais_candidatos %>% filter(Descricao_cargo %in% c("PREFEITO","VEREADOR"), Descricao_situacao_candidatura %in% c("DEFERIDO","DEFERIDO COM RECURSO")) %>%
select(Nome_candidato,CPF_candidato,Descricao_ue,-Descricao_cargo,Numero_candidato_urna,-Descricao_situacao_candidatura,Descricao_ocupacao,Idade_data_eleicao,Descricao_sexo,Descricao_grau_instrucao,Descricao_estado_civil,Descricao_cor_raca,Descricao_nacionalidade,Sigla_uf_nascimento,Nome_municipio_nascimento)
informacoes_pessoais_candidatos$Descricao_ue <- iconv(informacoes_pessoais_candidatos$Descricao_ue, from="latin1", to="ASCII//TRANSLIT")
# Adiciona cargo, partido, coligação e votação dos candidatos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
# Adiciona gastos para cada candidato
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
candidatos <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
candidatos$Soma_gastos <- with(candidatos, ifelse(is.na(Soma_gastos),0,Soma_gastos))
View(candidatos)
abstencao <- read.csv("../data/comparecimento_abstencao_localidade.csv", sep=";", dec = ",", stringsAsFactors = F, encoding = "UTF-8", header = T) %>%
select(Localidade, Cargo, Comparecimento, Abstenção)
abstencao$Localidade <- iconv(abstencao$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
View(abstencao)
candidatos <- candidatos %>% inner_join(abstencao, by = c("Nome.da.UE" = "Localidade", "Cargo" = "Cargo"))
candidatos <- candidatos %>% inner_join(abstencao, by = c("Descricao_ue" = "Localidade", "Cargo" = "Cargo"))
View(candidatos)
eleitorado_apto <- read.csv("../data/eleitorado_2016_mun.csv", sep=";") %>% filter(UF=="PB")
eleitorado_apto$MUNICIPIO <- iconv(eleitorado_apto$MUNICIPIO, from="UTF-8", to="ASCII//TRANSLIT")
View(eleitorado_apto)
View(candidatos)
candidatos <- candidatos %>% inner_join(eleitorado_apto, by = c("Descricao_ue" = "MUNICIPIO"))
View(candidatos)
View(informacoes_pessoais_candidatos)
View(candidatos)
candidatos$ELEITORADO.APTO == candidatos$Comparecimento + candidatos$Abstenção
View(candidatos)
View(candidatos)
length(unique(candidatos$CPF.do.candidato))
length(unique(candidatos$Nome_candidato))
nrow(unique(candidatos[,c("Numero_candidato_urna","Descricao_ue")]))
length(unique(candidatos$Descricao_ue))
View(todos_candidatos)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# Informacoes pessoais dos candidatos
informacoes_pessoais_candidatos <- read.csv("../data/consulta_cand_2016_PB.txt", sep=";", header = F, stringsAsFactors = F, encoding = "latin1", col.names = c("Data_geracao","Dora_geracao","Ano_eleicao","Num_turno","Descricao_eleicao","Sigla_uf","Sigla_ue","Descricao_ue","Codigo_cargo","Descricao_cargo","Nome_candidato","Sequencial_candidato",
"Numero_candidato_urna","CPF_candidato","Nome_urna_candidato","Cod_situacao_candidatura","Descricao_situacao_candidatura","Numero_partido","Sigla_partido","Nome_partido","Codigo_legenda","Sigla_legenda","Composicao_legenda","Nome_legenda",
"Codigo_ocupacao","Descricao_ocupacao","Data_nascimento","Num_titulo_eleitoral_candidato","Idade_data_eleicao","Codigo_sexo","Descricao_sexo","Cod_grau_instrucao","Descricao_grau_instrucao","Codigo_estado_civil","Descricao_estado_civil","Codigo_cor_raca",
"Descricao_cor_raca","Codigo_nacionalidade","Descricao_nacionalidade","Sigla_uf_nascimento","Codigo_municipio_nascimento","Nome_municipio_nascimento","Despesa_max_campanha","Cod_situacao_totalizacao_turno","Descricao_situacao_totalizacao_turno","Email"))
informacoes_pessoais_candidatos <- informacoes_pessoais_candidatos %>% filter(Descricao_cargo %in% c("PREFEITO","VEREADOR"), Descricao_situacao_candidatura %in% c("DEFERIDO","DEFERIDO COM RECURSO")) %>%
select(Nome_candidato,CPF_candidato,Descricao_ue,-Descricao_cargo,Numero_candidato_urna,-Descricao_situacao_candidatura,Descricao_ocupacao,Idade_data_eleicao,Descricao_sexo,Descricao_grau_instrucao,Descricao_estado_civil,Descricao_cor_raca,Descricao_nacionalidade,Sigla_uf_nascimento,Nome_municipio_nascimento)
informacoes_pessoais_candidatos$Descricao_ue <- iconv(informacoes_pessoais_candidatos$Descricao_ue, from="latin1", to="ASCII//TRANSLIT")
# Adiciona cargo, partido, coligação e votação dos candidatos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
# Adiciona gastos para cada candidato
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
candidatos <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
candidatos$Soma_gastos <- with(candidatos, ifelse(is.na(Soma_gastos),0,Soma_gastos))
# Adiciona abstencao
abstencao <- read.csv("../data/comparecimento_abstencao_localidade.csv", sep=";", dec = ",", stringsAsFactors = F, encoding = "UTF-8", header = T) %>%
select(Localidade, Cargo, Comparecimento, Abstenção)
abstencao$Localidade <- iconv(abstencao$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
candidatos <- candidatos %>% inner_join(abstencao, by = c("Descricao_ue" = "Localidade", "Cargo" = "Cargo"))
# Adiciona despesas dos candidatos
eleitorado_apto <- read.csv("../data/eleitorado_2016_mun.csv", sep=";") %>% filter(UF=="PB")
eleitorado_apto$MUNICIPIO <- iconv(eleitorado_apto$MUNICIPIO, from="UTF-8", to="ASCII//TRANSLIT")
candidatos <- candidatos %>% inner_join(eleitorado_apto, by = c("Descricao_ue" = "MUNICIPIO"))
View(candidatos)
View(candidatos)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# Informacoes pessoais dos candidatos
informacoes_pessoais_candidatos <- read.csv("../data/consulta_cand_2016_PB.txt", sep=";", header = F, stringsAsFactors = F, encoding = "latin1", col.names = c("Data_geracao","Dora_geracao","Ano_eleicao","Num_turno","Descricao_eleicao","Sigla_uf","Sigla_ue","Descricao_ue","Codigo_cargo","Descricao_cargo","Nome_candidato","Sequencial_candidato",
"Numero_candidato_urna","CPF_candidato","Nome_urna_candidato","Cod_situacao_candidatura","Descricao_situacao_candidatura","Numero_partido","Sigla_partido","Nome_partido","Codigo_legenda","Sigla_legenda","Composicao_legenda","Nome_legenda",
"Codigo_ocupacao","Descricao_ocupacao","Data_nascimento","Num_titulo_eleitoral_candidato","Idade_data_eleicao","Codigo_sexo","Descricao_sexo","Cod_grau_instrucao","Descricao_grau_instrucao","Codigo_estado_civil","Descricao_estado_civil","Codigo_cor_raca",
"Descricao_cor_raca","Codigo_nacionalidade","Descricao_nacionalidade","Sigla_uf_nascimento","Codigo_municipio_nascimento","Nome_municipio_nascimento","Despesa_max_campanha","Cod_situacao_totalizacao_turno","Descricao_situacao_totalizacao_turno","Email"))
informacoes_pessoais_candidatos <- informacoes_pessoais_candidatos %>% filter(Descricao_cargo %in% c("PREFEITO","VEREADOR"), Descricao_situacao_candidatura %in% c("DEFERIDO","DEFERIDO COM RECURSO")) %>%
select(Nome_candidato,CPF_candidato,Descricao_ue,-Descricao_cargo,Numero_candidato_urna,-Descricao_situacao_candidatura,Descricao_ocupacao,Idade_data_eleicao,Descricao_sexo,Descricao_grau_instrucao,Descricao_estado_civil,Descricao_cor_raca,Descricao_nacionalidade,Sigla_uf_nascimento,Nome_municipio_nascimento)
informacoes_pessoais_candidatos$Descricao_ue <- iconv(informacoes_pessoais_candidatos$Descricao_ue, from="latin1", to="ASCII//TRANSLIT")
# Adiciona cargo, partido, coligação e votação dos candidatos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
# Adiciona gastos para cada candidato
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
View(gastos_candidatos_pb)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
View(gastos_candidatos_pb)
summarise(Soma_gastos = sum(Valor.despesa)) %>%
candidatos <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
View(candidatos)
View(gastos_candidatos_pb)
candidatos <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa))
View(candidatos)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# Informacoes pessoais dos candidatos
informacoes_pessoais_candidatos <- read.csv("../data/consulta_cand_2016_PB.txt", sep=";", header = F, stringsAsFactors = F, encoding = "latin1", col.names = c("Data_geracao","Dora_geracao","Ano_eleicao","Num_turno","Descricao_eleicao","Sigla_uf","Sigla_ue","Descricao_ue","Codigo_cargo","Descricao_cargo","Nome_candidato","Sequencial_candidato",
"Numero_candidato_urna","CPF_candidato","Nome_urna_candidato","Cod_situacao_candidatura","Descricao_situacao_candidatura","Numero_partido","Sigla_partido","Nome_partido","Codigo_legenda","Sigla_legenda","Composicao_legenda","Nome_legenda",
"Codigo_ocupacao","Descricao_ocupacao","Data_nascimento","Num_titulo_eleitoral_candidato","Idade_data_eleicao","Codigo_sexo","Descricao_sexo","Cod_grau_instrucao","Descricao_grau_instrucao","Codigo_estado_civil","Descricao_estado_civil","Codigo_cor_raca",
"Descricao_cor_raca","Codigo_nacionalidade","Descricao_nacionalidade","Sigla_uf_nascimento","Codigo_municipio_nascimento","Nome_municipio_nascimento","Despesa_max_campanha","Cod_situacao_totalizacao_turno","Descricao_situacao_totalizacao_turno","Email"))
informacoes_pessoais_candidatos <- informacoes_pessoais_candidatos %>% filter(Descricao_cargo %in% c("PREFEITO","VEREADOR"), Descricao_situacao_candidatura %in% c("DEFERIDO","DEFERIDO COM RECURSO")) %>%
select(Nome_candidato,CPF_candidato,Descricao_ue,-Descricao_cargo,Numero_candidato_urna,-Descricao_situacao_candidatura,Descricao_ocupacao,Idade_data_eleicao,Descricao_sexo,Descricao_grau_instrucao,Descricao_estado_civil,Descricao_cor_raca,Descricao_nacionalidade,Sigla_uf_nascimento,Nome_municipio_nascimento)
informacoes_pessoais_candidatos$Descricao_ue <- iconv(informacoes_pessoais_candidatos$Descricao_ue, from="latin1", to="ASCII//TRANSLIT")
# Adiciona cargo, partido, coligação e votação dos candidatos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
# Adiciona gastos para cada candidato
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
candidatos <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
View(candidatos)
gastos_candidatos_pb %>% filter(CPF.do.candidato == 45107793487)
romero <- gastos_candidatos_pb %>% filter(CPF.do.candidato == 45107793487)
View(romero)
sum(romero$Valor.despesa)
romero <- gastos_candidatos_pb %>% filter(CPF.do.candidato == 45107793487) %>%
group_by(Tipo.despesa) %>%
summarise(Soma_gastos = sum(Valor.despesa))
View(romero)
sum(romero$Soma_gastos)
300000 + 93750 + 62276 + 32000+ 30900.20 + 30000 + 20400 + 12600 + 5000 + 3237.5 + 3000 + 2272.5 + 2060 + 1500 + 1081.85 + 173.9
600251.95-590241.95
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# Informacoes pessoais dos candidatos
informacoes_pessoais_candidatos <- read.csv("../data/consulta_cand_2016_PB.txt", sep=";", header = F, stringsAsFactors = F, encoding = "latin1", col.names = c("Data_geracao","Dora_geracao","Ano_eleicao","Num_turno","Descricao_eleicao","Sigla_uf","Sigla_ue","Descricao_ue","Codigo_cargo","Descricao_cargo","Nome_candidato","Sequencial_candidato",
"Numero_candidato_urna","CPF_candidato","Nome_urna_candidato","Cod_situacao_candidatura","Descricao_situacao_candidatura","Numero_partido","Sigla_partido","Nome_partido","Codigo_legenda","Sigla_legenda","Composicao_legenda","Nome_legenda",
"Codigo_ocupacao","Descricao_ocupacao","Data_nascimento","Num_titulo_eleitoral_candidato","Idade_data_eleicao","Codigo_sexo","Descricao_sexo","Cod_grau_instrucao","Descricao_grau_instrucao","Codigo_estado_civil","Descricao_estado_civil","Codigo_cor_raca",
"Descricao_cor_raca","Codigo_nacionalidade","Descricao_nacionalidade","Sigla_uf_nascimento","Codigo_municipio_nascimento","Nome_municipio_nascimento","Despesa_max_campanha","Cod_situacao_totalizacao_turno","Descricao_situacao_totalizacao_turno","Email"))
informacoes_pessoais_candidatos <- informacoes_pessoais_candidatos %>% filter(Descricao_cargo %in% c("PREFEITO","VEREADOR"), Descricao_situacao_candidatura %in% c("DEFERIDO","DEFERIDO COM RECURSO")) %>%
select(Nome_candidato,CPF_candidato,Descricao_ue,-Descricao_cargo,Numero_candidato_urna,-Descricao_situacao_candidatura,Descricao_ocupacao,Idade_data_eleicao,Descricao_sexo,Descricao_grau_instrucao,Descricao_estado_civil,Descricao_cor_raca,Descricao_nacionalidade,Sigla_uf_nascimento,Nome_municipio_nascimento)
informacoes_pessoais_candidatos$Descricao_ue <- iconv(informacoes_pessoais_candidatos$Descricao_ue, from="latin1", to="ASCII//TRANSLIT")
# Adiciona cargo, partido, coligação e votação dos candidatos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Votação, Situação, Situação_classe, Partido, Coligação, Numero_candidato = Nº)
candidatos <- informacoes_pessoais_candidatos %>% inner_join(todos_candidatos, by = c("Descricao_ue" = "Localidade", "Numero_candidato_urna" = "Numero_candidato"))
# Adiciona limite de despesas para cada cargo e municipio
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador) %>%
melt(id=c("municipio")) %>%
rename(Cargo = variable, Limite_de_despesas = value, Municipio = municipio) %>%
mutate(Cargo = as.character(Cargo))
candidatos <- candidatos %>% inner_join(limite_despesas_candidatos_pb, by = c("Descricao_ue" = "Municipio", "Cargo" = "Cargo"))
# Adiciona gastos para cada candidato
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
candidatos <- gastos_candidatos_pb %>% group_by(CPF.do.candidato) %>%
summarise(Soma_gastos = sum(Valor.despesa)) %>%
right_join(candidatos, by = c("CPF.do.candidato" = "CPF_candidato"))
candidatos$Soma_gastos <- with(candidatos, ifelse(is.na(Soma_gastos),0,Soma_gastos))
# Adiciona abstencao
abstencao <- read.csv("../data/comparecimento_abstencao_localidade.csv", sep=";", dec = ",", stringsAsFactors = F, encoding = "UTF-8", header = T) %>%
select(Localidade, Cargo, Comparecimento, Abstenção)
abstencao$Localidade <- iconv(abstencao$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
candidatos <- candidatos %>% inner_join(abstencao, by = c("Descricao_ue" = "Localidade", "Cargo" = "Cargo"))
# Adiciona despesas dos candidatos
eleitorado_apto <- read.csv("../data/eleitorado_2016_mun.csv", sep=";") %>% filter(UF=="PB")
eleitorado_apto$MUNICIPIO <- iconv(eleitorado_apto$MUNICIPIO, from="UTF-8", to="ASCII//TRANSLIT")
candidatos <- candidatos %>% inner_join(eleitorado_apto, by = c("Descricao_ue" = "MUNICIPIO"))
View(candidatos)
write.csv(candidatos, "../data/candidatos.csv" ,sep=";", row.names = F, quote = F)
write.table(candidatos, "../data/candidatos.csv" ,sep=";", row.names = F, quote = F)
?read.table
?write.table
write.table(candidatos, "../data/candidatos.csv" ,sep=";", row.names = F, quote = F)
View(candidatos)
candidatos <- read.csv("../data/candidatos.csv", sep=";")
View(candidatos)
reeleitos <- candidatos %>% filter(Descricao_ocupacao == "VEREADOR", Cargo == "Vereador", Situação_classe == "Eleito")
View(reeleitos)
eleitos.1 <- candidatos %>% filter(Descricao_ocupacao != "VEREADOR", Cargo == "Vereador", Situação_classe == "Eleito")
View(eleitos.1)
View(reeleitos)
plot(reeleitos$Soma_gastos)
hist(reeleitos$Soma_gastos)
table(reeleitos$Soma_gastos)
View(reeleitos)
View(candidatos)
View(candidatos)
with(candidatos, Porcentagem_limite_despesas <- Soma_gastos/Limite_despesas)
with(candidatos, Porcentagem_limite_despesas <- Soma_gastos/Limite_de_despesas)
Porcentagem_limite_despesas <- with(candidatos, Soma_gastos/Limite_de_despesas)
candidatos <- read.csv("../data/candidatos.csv", sep=";")
with(candidatos, Porcentagem_limite_despesas <- Soma_gastos/Limite_de_despesas)
Porcentagem_limite_despesas <- with(candidatos, Soma_gastos/Limite_de_despesas)
candidatos$Porcentagem_limite_despesas <- with(candidatos, Soma_gastos/Limite_de_despesas)
candidatos <- read.csv("../data/candidatos.csv", sep=";")
candidatos$Porcentagem_limite_despesas <- with(candidatos, Soma_gastos/Limite_de_despesas)
View(candidatos)
reeleitos <- candidatos %>% filter(Descricao_ocupacao == "VEREADOR", Cargo == "Vereador", Situação_classe == "Eleito")
eleitos.1 <- candidatos %>% filter(Descricao_ocupacao != "VEREADOR", Cargo == "Vereador", Situação_classe == "Eleito")
table(reeleitos$Porcentagem_limite_despesas)
hist(reeleitos$Porcentagem_limite_despesas)
hist(reeleitos$Porcentagem_limite_despesas, breaks = 10)
?hist
hist(reeleitos$Porcentagem_limite_despesas, breaks = 5)
hist(reeleitos$Porcentagem_limite_despesas, breaks = 15)
hist(reeleitos$Porcentagem_limite_despesas, breaks = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1))
hist(reeleitos$Porcentagem_limite_despesas, breaks = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,7))
shapiro.test(reeleitos$Porcentagem_limite_despesas)
?shapiro.test
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(runif(100, min = 2, max = 4))
hist(eleitos.1$Porcentagem_limite_despesas, breaks = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,7))
hist(eleitos.1$Porcentagem_limite_despesas, breaks = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1))
shapiro.test(eleitos.1$Porcentagem_limite_despesas)
mean(reeleitos$Porcentagem_limite_despesas)
mean(eleitos.1$Porcentagem_limite_despesas)
summarise(reeleitos$Porcentagem_limite_despesas)
summary(reeleitos$Porcentagem_limite_despesas)
reeleitos$Porcentagem_limite_despesas
summary(eleitos.1$Porcentagem_limite_despesas)
summary(reeleitos$Porcentagem_limite_despesas)
summary(eleitos.1$Porcentagem_limite_despesas)
