source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
# gastos_candidatos_rf_pb <- read.csv("../data/despesas_candidatos_relatorio_financeiro_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
# gastos_candidatos_rf_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# tabela com total de gastos por candidato
colnames(gastos_candidatos_pb)
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
View(total_gastos_candidatos)
for (i in 1:nrow(total_gastos_candidatos)) {
print(total_gastos_candidatos$Número.candidato[i])
}
total_gastos_candidatos[1:12,]
?group_by
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato)
total_gastos_candidatos[1:12,]
total_gastos_candidatos[1:12,]
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato)
View(gastos_candidatos_pb)
View(eleicao_candidatos)
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
?write.table
write.table(total_gastos_candidatos, "total_gastos_candidatos.csv", quote = F, row.names = F, sep=";")
View(total_gastos_candidatos)
?rowwise
write.table(total_gastos_candidatos, "total_gastos_candidatos.csv", quote = F, row.names = F, sep=";", fileEncoding = "UTF-8")
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
filter(!is.na(x)) %>% unique()
})
x<-c(NA,"a","NA")
x[!is.na(x)]
x[!is.na(x)] %>% unique
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
x[!is.na(x)] %>% unique
})
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
x[!is.na(x)]
})
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
x[1]
})
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
print(x)
})
total_gastos_candidatos[1:12,] %>% group_by(Nome.da.UE) %>% apply(2, FUN = function(x){
print(x)
})
total_gastos_candidatos[1:12,] %>% group_by(Nome.da.UE) %>% apply(2, FUN = function(x){
x
})
total_gastos_candidatos[1:12,] %>% group_by(Nome.da.UE) %>% apply(2, FUN = function(x){
x[1]
})
total_gastos_candidatos[1:12,]
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
x[1]
})
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
print(x)
})
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% apply(2, FUN = function(x){
unique(x)
})
total_gastos_candidatos[1:12,] %>% apply(2, FUN = function(x){
unique(x)
})
?mutate_each
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(unique)
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each()
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs=x[1])
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs=[1)
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs=[[1)
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs=1]])
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs=1])
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs=length)
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(length)
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs(length))
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs([1]))
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs(is.na))
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% mutate_each(funs(unique))
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% summarise_each(funs(1))
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% summarise_each(funs(!is.na))
total_gastos_candidatos[1:12,] %>% group_by(Número.candidato) %>% summarise_each(funs(is.na))
View(gastos_candidatos_pb)
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo, Sigla.da.UE) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo, Sigla.da.UE)
View(total_gastos_candidatos)
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo, Sigla.da.UE) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo, Sigla.da.UE)
View(total_gastos_candidatos)
unique(total_gastos_candidatos[,c("Nome.da.UE","Sigla.da.UE")])
!is.na(total_gastos_candidatos[,c("Nome.da.UE","Sigla.da.UE")])
total_gastos_candidatos[,c("Nome.da.UE","Sigla.da.UE")] %>% na.omit()
a<-total_gastos_candidatos[,c("Nome.da.UE","Sigla.da.UE")] %>% na.omit()
View(a)
a<-total_gastos_candidatos[,c("Nome.da.UE","Sigla.da.UE")] %>% na.omit() %>% unique()
View(a)
View(a)
codigos_cidades<-gastos_candidatos_pb[,c("Nome.da.UE","Sigla.da.UE")] %>% na.omit() %>% unique()
View(codigos_cidades)
ifelse(str_detect(eleicao_candidatos$Localidade) %in% codigos_cidades$Nome.da.UE, add_cidade_codigo, cria_codigo)
?ifelse
ifelse(str_detect(eleicao_candidatos$Localidade) %in% codigos_cidades$Nome.da.UE, print(eleicao_candidatos$Localidade), "no")
str_detect(eleicao_candidatos$Localidade) %in% codigos_cidades$Nome.da.UE
str_detect(codigos_cidades$Nome.da.UE, eleicao_candidatos$Localidade)
str_detect(codigos_cidades$Nome.da.UE, eleicao_candidatos$Localidade)
codigos_cidades$Nome.da.UE
eleicao_candidatos$Localidade
pattern <- eleicao_candidatos$Localidade %>% unique()
pattern
novas <- !(pattern %in% codigos_cidades$Nome.da.UE)
pattern %in% codigos_cidades$Nome.da.UE
novas <- pattern[!(pattern %in% codigos_cidades$Nome.da.UE)]
novas
codigos_cidades$Nome.da.UE
codigos_cidades$Nome.da.UE
pattern
codigos_cidades$Nome.da.UE
novas
novas <- eleicao_candidatos$Localidade %>% unique() %>% pattern[!(pattern %in% codigos_cidades$Nome.da.UE)]
eleicao_candidatos$Localidade %>% unique()
sort(pattern)
sort(novas)
View(codigos_cidades)
sort(codigos_cidades$Nome.da.UE)
sort(novas)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
codigos_cidades <- gastos_candidatos_pb[,c("Nome.da.UE","Sigla.da.UE")] %>% na.omit() %>% unique()
codigos_cidades
pattern <- eleicao_candidatos$Localidade %>% unique()
pattern
novas <- pattern[!(pattern %in% codigos_cidades$Nome.da.UE)]
novas
View(eleicao_candidatos)
codigos_cidades <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
codigos_cidades
cidades <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_gastos
eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique() %>% %in% cidades_gastos
cidades_gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
cidades_sem_registro_gasto
?filter
View(eleicao_candidatos)
eleicao_candidatos <- eleicao_candidatos %>% filter(!(cidades_sem_registro_gasto %in% Localidade))
View(eleicao_candidatos)
cidades_sem_registro_gasto %in% Localidade
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
cidades_sem_registro_gasto %in% eleicao_candidatos$Localidade
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
View(eleicao_candidatos)
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo, Sigla.da.UE)
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
View(total_gastos_candidatos)
by_user <- total_gastos_candidatos[1:12,] %>% group_by(Número.candidato, Nome.da.UE)
fn <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "", col[min(not_na_index)])
}
user.summary <- summarize_each(by_user, funs(fn))
fn <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, NA, col[min(not_na_index)])
}
by_user <- total_gastos_candidatos[1:12,] %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(fn))
View(user.summary)
View(by_user)
fn <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, NA, col[max(not_na_index)])
}
by_user <- total_gastos_candidatos[1:12,] %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(fn))
View(user.summary)
View(by_user)
View(user.summary)
View(total_gastos_candidatos)
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, NA, col[max(not_na_index)])
}
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, NA, col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
# tabela com total de gastos por candidato
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
by_user <- total_gastos_candidatos %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(junta_informacoes_candidato))
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
# tabela com total de gastos por candidato
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
by_user <- total_gastos_candidatos %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(junta_informacoes_candidato))
View(user.summary)
user.summary[,c("Nome.candidato","Número.candidato")]
user.summary[,c("Nome.candidato","Número.candidato")] %>% unique
a <- data.frame(a=c(1,2,3),b=c(1,2,4))
View(a)
a <- data.frame(a=c(1,1,3),b=c(1,1,4))
View(by_user)
View(a)
a <- data.frame(a=c(1,2,3),b=c(1,2,4))
View(a)
a <- data.frame(a=c(1,1,3),b=c(2,2,4))
View(a)
unique(a)
a %>% unique()
a %>% unique
user.summary[,c("Nome.candidato","Número.candidato")] %>% unique %>% length()
user.summary[,c("Nome.candidato","Número.candidato")] %>% unique %>% nrow
nrow(user.summary)
a<-user.summary[,c("Nome.candidato","Número.candidato")] %>% unique %>% nrow
a<-user.summary[,c("Nome.candidato","Número.candidato")] %>% unique
a$included_a <- TRUE
b <- user.summary[,c("Nome.candidato","Número.candidato")]
b2$included_b <- TRUE
b$included_b <- TRUE
res <- merge(a, b, all.y=TRUE)
View(res)
install.packages(compare)
install.packages("compare")
library(compare)
a1 <- data.frame(a = 1:5, b = letters[1:5])
a2 <- data.frame(a = 1:3, b = letters[1:3])
comparison <- compare(a1,a2,allowAll=TRUE)
comparison
comparison$tM
a1
a2
?compare
?anti_join
anti_join(a, b)
anti_join(a, b, by=c("Nome.candidato","Número.candidato"))
duplicated(user.summary)
which(duplicated(user.summary))
duplicated(user.summary) == T
which(duplicated(user.summary)==T)
which(duplicated(a)==T)
a <- user.summary[,c("Nome.candidato","Número.candidato")] %>% unique
b <- user.summary[,c("Nome.candidato","Número.candidato")]
which(duplicated(b)==T)
b[5035,]
b %>% filter(Nome.candidato == "ADELSON FRANCISCO DA SILVA")
user.summary %>% filter(Nome.candidato == "ADELSON FRANCISCO DA SILVA")
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
# tabela com total de gastos por candidato
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
by_user <- total_gastos_candidatos %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(junta_informacoes_candidato))
View(eleicao_candidatos)
View(eleicao_candidatos)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
