duplicated(user.summary) == T
which(duplicated(user.summary)==T)
which(duplicated(a)==T)
a <- user.summary[,c("Nome.candidato","Número.candidato")] %>% unique
b <- user.summary[,c("Nome.candidato","Número.candidato")]
which(duplicated(b)==T)
b[5035,]
b %>% filter(Nome.candidato == "ADELSON FRANCISCO DA SILVA")
user.summary %>% filter(Nome.candidato == "ADELSON FRANCISCO DA SILVA")
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
# tabela com total de gastos por candidato
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
by_user <- total_gastos_candidatos %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(junta_informacoes_candidato))
View(eleicao_candidatos)
View(eleicao_candidatos)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F)
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F)
View(limite_despesas_candidatos_pb)
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
View(limite_despesas_candidatos_pb)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
View(limite_despesas_candidatos_pb)
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1Âº.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
source("imports.R")
install.packages("reshape2")
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
library(reshape2)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
View(gastos_candidatos_pb)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, NÂº)
?str_split
install.packages("stringr")
install.packages("stringr")
library(stringr)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, NÂº)
install.packages("wordcloud")
install.packages("dplyr")
library(dplyr)
install.packages("SnowballC")
install.packages("wordcloud")
install.packages("reshape2")
install.packages("stringr")
install.packages("stringr")
install.packages("tm")
if(!require(dplyr)){
install.packages("dplyr")
}
library(dplyr)
# Machine learning
if(!require(caret)){
install.packages("caret")
}
library(caret)
# Tratar com JSON
if(!require(jsonlite)){
install.packages("jsonlite")
}
library(jsonlite)
if(!require(rjson)){
install.packages("rjson")
}
library(rjson)
# if(!require(xlsx)){
#   install.packages("xlsx")
# }
# library(xlsx)
# if(!require(readODS)){
#   install.packages("readODS")
# }
# library(readODS)
if(!require(SnowballC)){
install.packages("SnowballC")
}
library(SnowballC)
if(!require(wordcloud)){
install.packages("wordcloud")
}
library(wordcloud)
if(!require(reshape2)){
install.packages("reshape2")
}
library(reshape2)
if(!require(stringr)){
install.packages("stringr")
}
library(stringr)
if(!require(tm)){
install.packages("tm")
}
library(tm)
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, NÂº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, NÂº)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
View(eleicao_candidatos)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
View(limite_despesas_candidatos_pb)
View(limite_despesas_candidatos_pb)
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "latin1")
View(limite_despesas_candidatos_pb)
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
View(limite_despesas_candidatos_pb)
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
View(limite_despesas_candidatos_pb)
View(eleicao_candidatos)
View(gastos_candidatos_pb)
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
View(eleicao_candidatos)
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, from="UTF-8", to="ASCII//TRANSLIT")
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, from="UTF-8", to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
View(eleicao_candidatos)
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- eleicao_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
eleicao_candidatos <- eleicao_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, NÃºmero.candidato, Sigla..Partido, Nome.da.UE, Cargo)
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(eleicao_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
by_user <- total_gastos_candidatos %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(junta_informacoes_candidato))
View(total_gastos_candidatos)
View(user.summary)
a <- user.summary %>% select(Número.candidato, Nome.da.UE) %>% unique
eleicao_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
eleicao_candidatos$Localidade <- iconv(eleicao_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
eleicao_candidatos$Candidato <- iconv(eleicao_candidatos$Candidato, from="UTF-8", to="ASCII//TRANSLIT")
eleicao_candidatos$Situação_classe <- ifelse((eleicao_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
eleicao_candidatos <- bind_cols(eleicao_candidatos, separa_partido_coligacao(eleicao_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
source("imports.R")
separa_partido_coligacao <- function(x){
partido_coligacao_list <- str_split(x, " / ", n = 2) %>%
lapply(function(y) {
if (is.na(y[2])) {
y[2] <- "-"
}
y
})
partido_coligacao <- do.call(rbind, partido_coligacao_list) %>% data.frame
partido_coligacao <- transmute(partido_coligacao, Partido=as.character(X1), Coligação=as.character(X2))
return(partido_coligacao)
}
junta_informacoes_candidato <- function(col) {
not_na_index <- which(!is.na(col))
ifelse(length(not_na_index) == 0, "-", col[max(not_na_index)])
}
# limite de despesas
limite_despesas_candidatos_pb <- read.csv("../data/limite_gastos_campanha_eleitoral_2016.csv", sep=";", dec=",", stringsAsFactors = F, encoding = "UTF-8")
limite_despesas_candidatos_pb$Município <- iconv(limite_despesas_candidatos_pb$Município, to="ASCII//TRANSLIT")
limite_despesas_candidatos_pb<-limite_despesas_candidatos_pb %>% filter(UF == "PB") %>%
select(municipio = Município, Prefeito = Limite.de.Gasto.Prefeito.1º.Turno, Vereador = Limite.de.Gasto.Vereador, eleitores_aptos = Eleitorado.Apto) %>%
melt(id=c("municipio","eleitores_aptos")) %>%
rename(cargo = variable, limite_de_despesas = value) %>%
mutate(cargo = as.character(cargo))
# gastos dos candidatos
gastos_candidatos_pb <- read.csv("../data/despesas_candidatos_2016_PB.txt", sep=";", encoding = "latin1", dec = ",", stringsAsFactors = F)
gastos_candidatos_pb$Nome.da.UE <- iconv(gastos_candidatos_pb$Nome.da.UE, from="latin1", to="ASCII//TRANSLIT")
gastos_candidatos_pb$Nome.candidato <- iconv(gastos_candidatos_pb$Nome.candidato, from="latin1", to="ASCII//TRANSLIT")
# candidatos eleitos
todos_candidatos <- read.csv("../data/eleicao_todos_candidatos.csv", sep=";", stringsAsFactors = F, encoding = "UTF-8")
todos_candidatos$Localidade <- iconv(todos_candidatos$Localidade, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Candidato <- iconv(todos_candidatos$Candidato, from="UTF-8", to="ASCII//TRANSLIT")
todos_candidatos$Situação_classe <- ifelse((todos_candidatos$Situação %in% c("Suplente","Não eleito")), "Não eleito", "Eleito")
todos_candidatos <- bind_cols(todos_candidatos, separa_partido_coligacao(todos_candidatos$Partido...Coligação)) %>%
select(Localidade, Cargo, Candidato, Votação, Situação, Situação_classe, Partido, Coligação, Nº)
# cidades sem registro de gastos
cidades_gastos <- gastos_candidatos_pb$Nome.da.UE %>% na.omit() %>% unique()
cidades_sem_registro_gasto <- todos_candidatos$Localidade %>% unique()
cidades_sem_registro_gasto <- cidades_sem_registro_gasto[!(cidades_sem_registro_gasto %in% cidades_gastos)]
todos_candidatos <- todos_candidatos %>% filter(!(Localidade %in% cidades_sem_registro_gasto))
# tabela com total de gastos por candidato
total_gastos_candidatos <- gastos_candidatos_pb %>% group_by(Nome.candidato, Número.candidato, Nome.da.UE, Sigla..Partido, CPF.do.candidato, Cargo) %>%
summarise(soma_gastos = sum(Valor.despesa)) %>%
full_join(todos_candidatos, by = c("Nome.da.UE" = "Localidade", "Nome.candidato" = "Candidato", "Número.candidato" = "Nº", "Sigla..Partido" = "Partido", "Cargo" = "Cargo")) %>%
arrange(Nome.candidato, Número.candidato, Sigla..Partido, Nome.da.UE, Cargo)
by_user <- total_gastos_candidatos %>% group_by(Número.candidato, Nome.da.UE)
user.summary <- summarize_each(by_user, funs(junta_informacoes_candidato))
todos_candidatos %>% select(Nº, Localidade) %>% unique
b <- todos_candidatos %>% select(Nº, Localidade) %>% unique
a <- user.summary %>% select(Número.candidato, Nome.da.UE) %>% unique
View(b)
View(a)
a %in% b
View(a)
View(b)
a <- user.summary %>% select(Número.candidato, Nome.da.UE) %>% unique %>% arrange(Número.candidato)
b <- todos_candidatos %>% select(Nº, Localidade) %>% unique %>% arrange(Número.candidato)
b <- todos_candidatos %>% select(Nº, Localidade) %>% unique %>% arrange(Nº)
View(a)
View(b)
a <- user.summary %>% select(Nome.da.UE) %>% unique %>% arrange(Número.candidato)
b <- todos_candidatos %>% select(Localidade) %>% unique %>% arrange(Nº)
a <- user.summary %>% select(Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
b <- todos_candidatos %>% select(Localidade) %>% unique %>% arrange(Localidade)
a <- user.summary %>% select(Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
a <- user.summary %>% select(Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
View(a)
a <- user.summary %>% select(Nome.da.UE)
a <- total_gastos_candidatos %>% select(Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
a <- total_gastos_candidatos$Nome.candidato
a <- total_gastos_candidatos$Nome.candidato %>% unique
a
a <- total_gastos_candidatos$Nome.da.UE %>% unique
a
b <- todos_candidatos %>% select(Localidade) %>% unique %>% arrange(Localidade)
b
setdiff(a,b)
?setdiff
setdiff(c("a,b"),c("a","c"))
setdiff(c("a","b"),c("a","c"))
b
a <- total_gastos_candidatos$Nome.da.UE %>% unique
b <- todos_candidatos$Localidade %>% unique
b
a
b
a
setdiff(c("a","b"),c("a","c"))
?setdiff
setdiff(c("a","c"),c("a","b"))
setdiff(a,b)
setdiff(b,a)
a %in% b
b %in% a
table(b %in% a)
table(a %in% b)
a <- user.summary %>% select(Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
a <- user.summary %>% select(Número.candidato, Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
a <- user.summary %>% select(Número.candidato, Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
b <- todos_candidatos %>% select(Nº, Localidade) %>% unique %>% arrange(Localidade)
rowcheck  <- function(df1, df2){
xx <- apply(df1, 1, paste, collapse = "")
yy <- apply(df2, 1, paste, collapse = "")
zz <- xx %in% yy
return(zz)
}
rowcheck(a, b)
table(rowcheck(b, a))
which(rowcheck(a, b) == F)
user.summary[which(rowcheck(a, b) == F),]
faltosos <- user.summary[which(rowcheck(a, b) == F),]
View(faltosos)
View(todos_candidatos)
View(user.summary)
areia <- user.summary %>% filter(Nome.da.UE == "AREIA")
View(areia)
tc.areia <- todos_candidatos %>% filter(Localidade == "AREIA")
View(tc.areia)
a <- user.summary %>% select(Número.candidato, Nome.da.UE) %>% unique %>% arrange(Nome.da.UE)
b <- todos_candidatos %>% select(Nº, Localidade) %>% unique %>% arrange(Localidade)
rowcheck  <- function(df1, df2){
xx <- apply(df1, 1, paste, collapse = "")
yy <- apply(df2, 1, paste, collapse = "")
zz <- xx %in% yy
return(zz)
}
faltosos <- user.summary[which(rowcheck(a, b) == F),]
View(faltosos)
